unit U_pesq_compra;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, U_Form_pesquisa_padrao, Data.DB,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, frxClass, frxExportBaseDialog, frxExportPDF,
  frxDBSet, FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.Grids, Vcl.DBGrids,
  Vcl.StdCtrls, Vcl.Buttons, Vcl.Mask, Vcl.ExtCtrls;

type
  TFrm_pesq_compra = class(TFrm_pesquisa_padrao)
    procedure bt_PesquisaClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_pesq_compra: TFrm_pesq_compra;

implementation

{$R *.dfm}

procedure TFrm_pesq_compra.bt_PesquisaClick(Sender: TObject);
begin
  Q_pesq_padrao.Close;
  Q_pesq_padrao.SQL.Add('');
  Q_pesq_padrao.Params.Clear;
  Q_pesq_padrao.SQL.Add('SELECT A.COMPRA_ID, ' + 'A.FORNECEDOR_ID, ' +
    'B.NOME, ' + 'A.ID_FORMA_PGTO, ' + 'C.DESCRICAO, ' + 'A.USUARIO, ' +
    'A.CADASTRO, ' + 'A.VALOR ' + 'FROM COMPRA A ' +
    'INNER JOIN FORNECEDOR B ON B.FORNECEDOR_ID = A.FORNECEDOR_ID ' +
    'INNER JOIN FORMA_PGTO C ON C.ID_FORMA_PGTO = A.ID_FORMA_PGTO ');

  case cb_chave_pesquisa.ItemIndex of
    0:
      begin
        // pesquisa por codigo
        Q_pesq_padrao.SQL.Add('WHERE A.COMPRA_ID =:PCOMPRA_ID');
        // criamos parametro
        Q_pesq_padrao.paramByname('PCOMPRA_ID').AsString := ed_nome.Text;
        // aponta para o campo do parametro
      end;

    1:
      begin
        Q_pesq_padrao.SQL.Add('WHERE A.USUARIO LIKE :PUSUARIO');
        // criamos parametro
        Q_pesq_padrao.paramByname('PUSUARIO').AsString := '%' + ed_nome.Text +
          '%'; // aponta para o campo do parametro
      end;

    2:
      begin
        // pesquisa por periodo
        Q_pesq_padrao.SQL.Add('WHERE A.FORNECEDOR_ID =:PFORNECEDOR_ID');
        Q_pesq_padrao.paramByname('PFORNECEDOR_ID').AsDate :=
          strTodate(mk_inicio.Text);
      end;

    3:
      begin
        // pesquisa por periodo
        Q_pesq_padrao.SQL.Add('WHERE A.ID_FORMA_PGTO =:PID_FORMA_PGTO');
        Q_pesq_padrao.paramByname('PID_FORMA_PGTO').AsString := ed_nome.Text
      end;

    4:
      begin
        // pesquisa por data
        Q_pesq_padrao.SQL.Add('WHERE A.CADASTRO BETWEEN :PINICIO AND :PFIM');
        Q_pesq_padrao.paramByname('PINICIO').AsDate :=
          strTodate(mk_inicio.Text);
        Q_pesq_padrao.paramByname('PFIM').AsDate := strTodate(mk_fim.Text);
      end;

    5:
      begin
        // pesquisa por periodo
        Q_pesq_padrao.SQL.Add('WHERE A.CADASTRO =:PCADASTRO');
        Q_pesq_padrao.paramByname('PCADASTRO').AsDate :=
          strTodate(mk_inicio.Text);
      end;

    6:
      begin
        // pesquisa por todos
        Q_pesq_padrao.SQL.Add('ORDER BY A.COMPRA_ID');
      end;

  end;

  Q_pesq_padrao.open;

  // Se nada for encontrado, mostra o codico abaixo
  if Q_pesq_padrao.IsEmpty then
  begin
    Messagedlg('Registro não encontrado!', Mtinformation, [mbOk], 0);
  end
  else
    abort;

end;

end.
